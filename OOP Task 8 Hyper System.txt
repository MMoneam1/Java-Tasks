
public class VegtableProduct extends Product {
	
	private double count;
	private String expirtdate;

	
	public VegtableProduct(double count, String expirtdate, String name, double price ) {
		super();
		this.count = count;
		this.expirtdate = expirtdate;
		this.name=name;
		this.price=price;
	}

	public double getCount() {
		return count;
	}

	public void setCount(double count) {
		this.count = count;
	}

	public String getExpirtdate() {
		return expirtdate;
	}

	public void setExpirtdate(String expirtdate) {
		this.expirtdate = expirtdate;
	}

	@Override
	double calculatePrice() {
		
		return count*price;
	}

	@Override
	void printProductDetails() {
	System.out.println("vegtable product "+name+"\ncount "+count +"\n expiry date "+expirtdate+"its price "+price );
		
	}

}

---------------------


public class ElectronicProduct extends Product {

	private String type;
	private String brandName;
	
	
	public ElectronicProduct(String type, String brandName, String name, double price ) {
		super();
		this.type = type;
		this.brandName = brandName;
		this.name=name;
		this.price=price;
	}

	public String getType() {
		return type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public String getBrandName() {
		return brandName;
	}

	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}

	@Override
	double calculatePrice() {
		return price;
	}

	@Override
	void printProductDetails() {
		System.out.println("electronic product "+name+"\ntype:  "+type +"\n brand name "+brandName+"its price "+price );
		
	}

}

-----------------------

import javax.swing.JOptionPane;

public class hyperSystem {

	public static void main(String[] args) {
		
		boolean validEntry = false ;
		boolean validProductSelection = false ;
		


		Product [] products = new Product [1];
		
		
		
	String userEntry = JOptionPane.showInputDialog( "please choose from below  \n  + to add new product \n - to remove product "
			+ "\n # to print all product ");	
		
	while (!validEntry) {
	
		
	
	
	
	switch (userEntry) {
	case "+":
		
		String productCountString = JOptionPane.showInputDialog("please enter products number" );
		int productCount = Integer.parseInt(productCountString);
		 products = new Product [productCount];
		 String name = "";
		 double price= 0.0;
		 String priceString ="";
		 for (int i = 0; i < products.length; i++) {
				validEntry = true ;
				String productType = 	JOptionPane.showInputDialog("please to add vegtables "
						+ "enter 1 \n to add electronics enter 2 \n to add clothes enter 3 \n");
	//			while (!validProductSelection) {
				
				switch (productType) {
				case "1":
				
					 name = JOptionPane.showInputDialog("please enter peoduct name ");
					 priceString = JOptionPane.showInputDialog("please enter product price ");
					 price = Double.parseDouble(priceString);
					String countString = JOptionPane.showInputDialog("please enter product count ");
					double count = Double.parseDouble(countString);
					String expirtdate = JOptionPane.showInputDialog("please enter expiry date  ");
					

					Product vegtables = new VegtableProduct(count, expirtdate, name, price);
					products [i]= vegtables;
					break;
					
			case "2":
				
		
				
				String type = JOptionPane.showInputDialog("please enter product type ");
				String brandName = JOptionPane.showInputDialog("please enter brand name  ");
				 name = JOptionPane.showInputDialog("please enter product name ");
				 priceString = JOptionPane.showInputDialog("please enter product price ");
				 price = Double.parseDouble(priceString);
				

				Product electronics = new ElectronicProduct(type, brandName, name, price);
				products [i]= electronics;
					break;
					
					
			case "3":
			
				 name = JOptionPane.showInputDialog("please enter peoduct name ");
				 priceString = JOptionPane.showInputDialog("please enter product price ");
				 price = Double.parseDouble(priceString);
				String size = JOptionPane.showInputDialog("please enter product size ");
				String color = JOptionPane.showInputDialog("please enter color  ");
				

				Product clothes = new ClothesProduct(name, color, size, price);
				products [i]= clothes;
				
				break;

				default:
					validProductSelection = false;
					productType =	JOptionPane.showInputDialog("please to add vegtables "
							+ "enter 1 \n to add electronics enter 2 \n to add clothes enter 3 \n");
					break;
				}
				}
	
		 userEntry = JOptionPane.showInputDialog( "please choose from below  \n  + to add new product \n - to remove product "
					+ "\n # to print all product ");	
		 validEntry = false ;
		break;
		
case "-":
	validEntry = true ;
	if (products.length >0 )
		products [products.length -1]= null ;
	else
		
		JOptionPane.showMessageDialog(null, "there are no products" );

	
	 userEntry = JOptionPane.showInputDialog( "please choose from below  \n  + to add new product \n - to remove product "
				+ "\n # to print all product ");	
	 validEntry = false ;
	
		break;
		
		
case "#":
	validEntry = true ;
	if (products.length >0 ){
		for (int j = 0; j < products.length; j++) {
			products[j].printProductDetails();
		}
	}

	else{
		

		JOptionPane.showMessageDialog(null, "there are no products" );
	}
	break;

	default:
		validEntry = false;
		userEntry = JOptionPane.showInputDialog( "please choose from below  \n  + to add new product \n - to remove product "
				+ "\n # to print all product ");
		break;
	}	
		
	}	
	}
	
}

---------------------


public abstract class Product {
protected String name;
protected double price;


abstract double calculatePrice();
abstract void printProductDetails();
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public double getPrice() {
	return price;
}
public void setPrice(double price) {
	this.price = price;
}


	
}

-------------------------


public class VegtableProduct extends Product {
	
	private double count;
	private String expirtdate;

	
	public VegtableProduct(double count, String expirtdate, String name, double price ) {
		super();
		this.count = count;
		this.expirtdate = expirtdate;
		this.name=name;
		this.price=price;
	}

	public double getCount() {
		return count;
	}

	public void setCount(double count) {
		this.count = count;
	}

	public String getExpirtdate() {
		return expirtdate;
	}

	public void setExpirtdate(String expirtdate) {
		this.expirtdate = expirtdate;
	}

	@Override
	double calculatePrice() {
		
		return count*price;
	}

	@Override
	void printProductDetails() {
	System.out.println("vegtable product "+name+"\ncount "+count +"\n expiry date "+expirtdate+"its price "+price );
		
	}

}
